/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AddForm {
        "jwt": any;
        "text": string;
    }
    interface ButtonComponent {
        "user_id": string;
    }
    interface MyComponent {
        "fetchData": () => Promise<any>;
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface RedeemForm {
        "jwt": any;
    }
    interface SwitchForm {
        "jwt": any;
    }
    interface UserComponent {
        "cssClass": string;
        "jwt": string;
        "valid": boolean;
    }
}
declare global {
    interface HTMLAddFormElement extends Components.AddForm, HTMLStencilElement {
    }
    var HTMLAddFormElement: {
        prototype: HTMLAddFormElement;
        new (): HTMLAddFormElement;
    };
    interface HTMLButtonComponentElement extends Components.ButtonComponent, HTMLStencilElement {
    }
    var HTMLButtonComponentElement: {
        prototype: HTMLButtonComponentElement;
        new (): HTMLButtonComponentElement;
    };
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLRedeemFormElement extends Components.RedeemForm, HTMLStencilElement {
    }
    var HTMLRedeemFormElement: {
        prototype: HTMLRedeemFormElement;
        new (): HTMLRedeemFormElement;
    };
    interface HTMLSwitchFormElement extends Components.SwitchForm, HTMLStencilElement {
    }
    var HTMLSwitchFormElement: {
        prototype: HTMLSwitchFormElement;
        new (): HTMLSwitchFormElement;
    };
    interface HTMLUserComponentElement extends Components.UserComponent, HTMLStencilElement {
    }
    var HTMLUserComponentElement: {
        prototype: HTMLUserComponentElement;
        new (): HTMLUserComponentElement;
    };
    interface HTMLElementTagNameMap {
        "add-form": HTMLAddFormElement;
        "button-component": HTMLButtonComponentElement;
        "my-component": HTMLMyComponentElement;
        "redeem-form": HTMLRedeemFormElement;
        "switch-form": HTMLSwitchFormElement;
        "user-component": HTMLUserComponentElement;
    }
}
declare namespace LocalJSX {
    interface AddForm {
        "jwt"?: any;
        "onEmitter"?: (event: CustomEvent<any>) => void;
        "text"?: string;
    }
    interface ButtonComponent {
        "user_id"?: string;
    }
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
        "onCompleted"?: (event: CustomEvent<any>) => void;
    }
    interface RedeemForm {
        "jwt"?: any;
    }
    interface SwitchForm {
        "jwt"?: any;
    }
    interface UserComponent {
        "cssClass"?: string;
        "jwt"?: string;
        "valid"?: boolean;
    }
    interface IntrinsicElements {
        "add-form": AddForm;
        "button-component": ButtonComponent;
        "my-component": MyComponent;
        "redeem-form": RedeemForm;
        "switch-form": SwitchForm;
        "user-component": UserComponent;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "add-form": LocalJSX.AddForm & JSXBase.HTMLAttributes<HTMLAddFormElement>;
            "button-component": LocalJSX.ButtonComponent & JSXBase.HTMLAttributes<HTMLButtonComponentElement>;
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "redeem-form": LocalJSX.RedeemForm & JSXBase.HTMLAttributes<HTMLRedeemFormElement>;
            "switch-form": LocalJSX.SwitchForm & JSXBase.HTMLAttributes<HTMLSwitchFormElement>;
            "user-component": LocalJSX.UserComponent & JSXBase.HTMLAttributes<HTMLUserComponentElement>;
        }
    }
}
